{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samke\\\\Downloads\\\\Lab Guide\\\\frontend\\\\src\\\\components\\\\postCreate.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport '.../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePost() {\n  _s();\n  const [form, setForm] = useState({\n    user: \"\",\n    content: \"\",\n    image: \"\"\n  });\n  const navigate = useNavigate();\n\n  // retrieve user\n  useEffect(() => {\n    const savedUser = localStorage.getItem(\"name\");\n    if (savedUser) {\n      setForm(prev => ({\n        ...prev,\n        user: savedUser\n      }));\n    } else {\n      // redirect to login\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n\n  //update state properties\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // image file changes\n  async function handleImageChange(e) {\n    const file = e.target.files[0];\n    if (file) {\n      try {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          const base64String = reader.result.split(\",\")[1];\n          updateForm({\n            image: base64String\n          });\n        };\n        reader.readAsDataURL(file);\n      } catch (error) {\n        window.alert(\"Error reading image file\");\n      }\n    }\n  }\n\n  // handle form submission\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // create new user\n    const token = localStorage.getItem(\"jwt\");\n    const newPost = {\n      user: form.user,\n      content: form.content,\n      image: form.image\n    };\n    try {\n      const response = await fetch(\"https://localhost:3000/post/upload\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer ${token}\"\n        },\n        body: JSON.stringify(newPost)\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response not OK\");\n      }\n      const result = await response.json();\n      console.log(\"Post created:\", result);\n      navigate(\"/\");\n    } catch (error) {\n      window.alert(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"header\",\n      children: \"Create new post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"user\",\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"user\",\n          value: form.user,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"content\",\n          value: form.content,\n          onChange: e => updateForm({\n            content: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"form-control\",\n          id: \"image\",\n          accept: \"image/*\",\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form=group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create Post\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePost, \"xWT34VnpCnrdxNn+hXbVbl8HT7k=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","CreatePost","_s","form","setForm","user","content","image","navigate","savedUser","localStorage","getItem","prev","updateForm","value","handleImageChange","e","file","target","files","reader","FileReader","onloadend","base64String","result","split","readAsDataURL","error","window","alert","onSubmit","preventDefault","token","newPost","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","disabled","onChange","accept","_c","$RefreshReg$"],"sources":["C:/Users/samke/Downloads/Lab Guide/frontend/src/components/postCreate.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport '.../App.css';\r\n\r\nexport default function CreatePost(){\r\n    const [form, setForm] = useState({\r\n        user: \"\",\r\n        content: \"\",\r\n        image: \"\",\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n// retrieve user\r\nuseEffect(()=> {\r\n    const savedUser = localStorage.getItem(\"name\");\r\n    if(savedUser){\r\n        setForm((prev) =>({\r\n            ...prev,\r\n            user: savedUser,\r\n        }));\r\n    }else{\r\n        // redirect to login\r\n        navigate(\"/login\");\r\n    }\r\n}, [navigate]);\r\n\r\n//update state properties\r\nfunction updateForm(value){\r\n    return setForm((prev) => {\r\n        return {...prev, ...value};\r\n    });\r\n}\r\n\r\n// image file changes\r\nasync function handleImageChange(e){\r\n    const file = e.target.files[0];\r\n    if(file){\r\n        try{\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                const base64String = reader.result.split(\",\")[1];\r\n                updateForm({image: base64String});\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }catch(error){\r\n            window.alert(\"Error reading image file\");\r\n        }\r\n    }\r\n}\r\n\r\n// handle form submission\r\nasync function onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // create new user\r\n    const token = localStorage.getItem(\"jwt\");\r\n\r\n    const newPost = {\r\n        user: form.user,\r\n        content: form.content,\r\n        image: form.image\r\n    };\r\n\r\n  try{\r\n    const response =await fetch(\"https://localhost:3000/post/upload\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n            \"Authorization\": \"Bearer ${token}\",\r\n        },\r\n        body: JSON.stringify(newPost),\r\n    });\r\n\r\n    if(!response.ok){\r\n        throw new Error(\"Network response not OK\")\r\n    }\r\n\r\n    const result = await response.json();\r\n    console.log(\"Post created:\", result);\r\n    navigate(\"/\");\r\n  }catch(error){\r\n    window.alert(error);\r\n  }\r\n}\r\n\r\nreturn(\r\n    <div className=\"container\">\r\n        <h3 className=\"header\">Create new post</h3>\r\n        <form onSubmit={onSubmit}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"user\">User</label>\r\n                <input \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                id=\"user\" \r\n                value={form.user} \r\n                disabled />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"content\">Content</label>\r\n                <input \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                id=\"content\" \r\n                value={form.content} onChange={(e) => updateForm({content: e.target.value})}/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"image\">Image</label>\r\n                <input \r\n                type=\"file\" \r\n                className=\"form-control\" \r\n                id=\"image\"\r\n                accept=\"image/*\" \r\n                onChange={handleImageChange}/>\r\n            </div>\r\n\r\n            <div className=\"form=group\">\r\n                <input type=\"submit\" value=\"Create Post\" className=\"btn btn-primary\"/>\r\n            </div>\r\n        </form>\r\n    </div>\r\n)\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}