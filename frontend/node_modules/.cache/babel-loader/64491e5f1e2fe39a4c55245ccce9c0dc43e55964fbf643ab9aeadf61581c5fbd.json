{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samke\\\\Downloads\\\\Lab Guide\\\\frontend\\\\src\\\\components\\\\postList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.post.user\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.post.content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `data:image/jpeg;base64,${props.post.image}` // Convert base64 string to image\n      ,\n      alt: \"Post Image\",\n      style: {\n        maxWidth: \"100px\",\n        maxHeight: \"100px\",\n        objectFit: \"cover\"\n      } // Ensure the image fits within the size limits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-link\",\n      onClick: () => props.deletePost(props.post._id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = Post;\nexport default function PostList() {\n  _s();\n  const [posts, setPosts] = useState([]);\n\n  // This method fetches the posts from the database.\n  useEffect(() => {\n    async function getPosts() {\n      const response = await fetch(\"http://localhost:3000/post/\");\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const posts = await response.json();\n      setPosts(posts);\n    }\n    getPosts();\n    return;\n  }, [posts.length]);\n\n  // This method will delete a post\n  async function deletePost(id) {\n    const token = localStorage.getItem(\"jwt\");\n    await fetch(`http://localhost:3000/posts/${id}`, {\n      method: 'DELETE',\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n    const newPosts = posts.filter(el => el._id !== id);\n    setPosts(newPosts);\n  }\n\n  // This method will map out the posts on the table\n  function PostList() {\n    return posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        deletePost: () => deletePost(post._id)\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"header\",\n        children: \"APDS Notice Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        style: {\n          marginTop: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Caption\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: PostList()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(PostList, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c2 = PostList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","Post","props","children","post","user","fileName","_jsxFileName","lineNumber","columnNumber","content","image","src","alt","style","maxWidth","maxHeight","objectFit","className","onClick","deletePost","_id","_c","PostList","_s","posts","setPosts","getPosts","response","fetch","ok","message","statusText","window","alert","json","length","id","token","localStorage","getItem","method","headers","newPosts","filter","el","map","marginTop","_c2","$RefreshReg$"],"sources":["C:/Users/samke/Downloads/Lab Guide/frontend/src/components/postList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport '../App.css';\r\n\r\nconst Post = (props) => (\r\n  <tr>\r\n    <td>{props.post.user}</td>\r\n    <td>{props.post.content}</td>\r\n    <td>\r\n      {props.post.image && (\r\n        <img\r\n          src={`data:image/jpeg;base64,${props.post.image}`} // Convert base64 string to image\r\n          alt=\"Post Image\"\r\n          style={{ maxWidth: \"100px\", maxHeight: \"100px\", objectFit: \"cover\" }} // Ensure the image fits within the size limits\r\n        />\r\n      )}\r\n    </td>\r\n    <td>\r\n      <button className=\"btn btn-link\" onClick={() => props.deletePost(props.post._id)}>\r\n        Delete\r\n      </button>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nexport default function PostList() {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  // This method fetches the posts from the database.\r\n  useEffect(() => {\r\n    async function getPosts() {\r\n        const response = await fetch(\"http://localhost:3000/post/\");\r\n\r\n      if (!response.ok) {\r\n        const message = `An error occurred: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n\r\n      const posts = await response.json();\r\n      setPosts(posts);\r\n    }\r\n\r\n    getPosts();\r\n\r\n    return;\r\n  }, [posts.length]);\r\n\r\n// This method will delete a post\r\nasync function deletePost(id) {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    await fetch(`http://localhost:3000/posts/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        \"Authorization\": `Bearer ${token}`,\r\n      },\r\n    });\r\n  \r\n    const newPosts = posts.filter((el) => el._id !== id);\r\n    setPosts(newPosts);\r\n  }\r\n  \r\n  // This method will map out the posts on the table\r\n  function PostList() {\r\n    return posts.map((post) => {\r\n      return (\r\n        <Post\r\n          post={post}\r\n          deletePost={() => deletePost(post._id)}\r\n          key={post._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <body>\r\n      <div className=\"container\">\r\n        <h3 className=\"header\">APDS Notice Board</h3>\r\n        <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n          <thead>\r\n            <tr>\r\n              <th>User</th>\r\n              <th>Caption</th>\r\n              <th>Image</th>\r\n              <th>Actions</th> {/* Added column for actions */}\r\n            </tr>\r\n          </thead>\r\n          <tbody>{PostList()}</tbody>\r\n        </table>\r\n      </div>\r\n    </body>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}